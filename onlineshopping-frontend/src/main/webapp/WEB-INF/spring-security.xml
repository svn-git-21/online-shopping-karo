<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	https://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/security 
    https://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan
		base-package="com.svk.onlineshopping_backend">
	</context:component-scan>

	<http pattern="/resources/**" security="none"/>
	<http>
		<!-- Only admin access -->
		<intercept-url pattern="/manage/**" access="hasAuthority('ADMIN')" />
		<!-- Only user access (who is registered)-->
		<intercept-url pattern="/cart/**" access="hasAuthority('USER')" />
		<!-- Rest of world -->
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/login" />
		<access-denied-handler error-page="/access-denied"/>
		<logout />
	</http>

	<authentication-manager>
		<authentication-provider>
			<!-- <user-service> Password is prefixed with {noop} to indicate to DelegatingPasswordEncoder 
				that NoOpPasswordEncoder should be used. This is not safe for production, 
				but makes reading in samples easier. Normally passwords should be hashed 
				using BCrypt <user name="souvik" password="abc123" authorities="ROLE_USER, 
				ROLE_ADMIN" /> </user-service> -->
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select email,password,enabled from user_detail where email=?"
				authorities-by-username-query="select email,role from user_detail where email=?" />
		</authentication-provider>
	</authentication-manager>

</b:beans>